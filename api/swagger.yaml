---
swagger: "2.0"
info:
  description: "Aims Quant api publisher"
  version: "1.0.0"
  title: "AimsQuant api"
  termsOfService: "http://aimsquant.io/terms/"
  contact:
    email: "shiv@aimsquant.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "localhost:8000"
basePath: "/api/v2"
tags:
- name: "user"
  description: "Operations about user"
- name: "thread"
  description: "operations about thread"
  externalDocs:
    description: "Find out more about us"
    url: "http://aimsquant.io"
schemes:
- "http"
produces:
- "application/json"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Register user"
      description: "User registration api."
      operationId: "regiteruser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"
  /user/login:
    post:
      tags:
      - "user"
      summary: "User Login"
      description: "User login for all roles. If project_admin tenantName is not required"
      operationId: "userlogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User login description. Check model definition for valid params"
        required: true
        schema:
          $ref: "#/definitions/Login"
      responses:
        200:
          description: "successful login"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  /user/activate:
    get:
      tags:
      - "user"
      summary: activate user
      description: activate user
      operationId: activateUser
      parameters:
      - in: query
        name: code
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "User"
  /user/forgotpassword:
    get:
      tags:
      - "user"
      summary: ask for email as parameter
      description: forgot password api
      produces:
      - application/json
      operationId: forgotPassword
      parameters:
      - in: query
        name: email
        required: true
        type: string
        format: email
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
  /user/setpassword:
    post:
      tags:
      - "user"
      summary: reset password by validating with the code
      description: reset password
      operationId: resetPassword
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resetpassword'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: code is not valid
  /thread:
    post:
      tags:
      - thread
      summary: post a thread
      description: post a new thread
      operationId: createThread
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Thread'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'

definitions:
  User:
    type: "object"
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      photo:
        type: "string"
      aboutme:
        type: "string"
      education:
        type: "string"
      profession:
        type: "string"
  Login:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"
  Thread:
    type: object
    required:
    - user
    - category
    - title
    - markdownText
    properties:
      user:
        type: string
        format: uuid
      category:
        type: string
      title:
        type: string
      markdownText:
        type: string
  resetpassword:
    type: object
    required:
    - password1
    - password2
    - code
    properties:
      password1:
        type: "string"
      password2:
        type: "string"
      code:
        type: "string"
        format: "uuid"
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"

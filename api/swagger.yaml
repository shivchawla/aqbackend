swagger: "2.0"
info:
  description: "Aimsquant api publisher"
  version: "1.0.0"
  title: "AimsQuant api"
  termsOfService: "http://www.aimsquant.com/terms/"
  contact:
    email: "shiv.chawla@aimsquant.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: 'localhost:3002'
basePath: "/api/v2"
tags:
- name: "user"
  description: "Operations about user"
- name: "thread"
  description: "operations about thread"
- name: "strategy"
  description: "operation about strategy"
- name: "backtest"
  description: operations on backtest
- name: "forwardtest"
  description: operations on forwardtest
- name: "advisor"
  description: "operations on advisor"
- name: "investor"
  description: "operations on investor"
- name: "advice"
  description: "operations on advice"
- name: "stock"
  description: "operations on stock"
- name: "watchlist"
  description: "operations on watchlist"
- name: "notebook"
  description: "operations on Julia Notebook" 
- name: "performance"
  description: "operations on Performance" 
- name: "config"
  description: "getting the static configs"
- name: "contest"
  description: "operations on contest"
- name: "contestentry"
  description: "operations on contest entry"
- name: "dailycontest"
  description: "operations on dailycontest"
  externalDocs:
    description: "Find out more about us"
    url: "http://www.aimsquant.com"

schemes:
- "https"
produces:
- "application/json"
paths:
  /user:
    post:
      tags:
      - "user"
      summary: "Register user"
      description: "User registration api."
      operationId: "registerUser"
      consumes:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      responses:
        default:
          description: "successful operation"
      x-swagger-router-controller: "User"

  /user/login:
    post:
      tags:
      - "user"
      summary: "User Login"
      description: "User login for all roles. If project_admin tenantName is not required"
      operationId: "userlogin"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User login description. Check model definition for valid params"
        required: true
        schema:
          $ref: "#/definitions/Login"
      responses:
        200:
          description: "successful login"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"
  
  /user/login_google:
    post:
      tags:
      - "user"
      summary: "User Login using Google"
      description: "User Login use Google OAuth"
      operationId: userGoogleLogin
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "User google login description. Check model definition for valid params"
        required: true
        schema:
          $ref: "#/definitions/GoogleLogin"
      responses:
        200:
          description: "successful login"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"

  /me:
    get:
      tags:
      - 'user'
      summary: 'get profile of user'
      operationId: getProfile
      consumes:
      - application/json
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      security:
      - api_key: []
      responses:
        200:
          description: "successful login"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "User"

  /user/activate:
    get:
      tags:
      - "user"
      summary: activate user
      description: activate user
      operationId: activateUser
      parameters:
      - in: query
        name: code
        type: string
        required: true
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "User"

  /user/resetpage:
    get:
      tags:
      - "user"
      summary: Reset api accessed from email
      description: Reset api accessed from email
      operationId: resetEmailLink
      parameters:
      - in: query
        name: code
        type: string
        required: true
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "User"

  /user/resetpasswordcall:
    post:
      tags:
      - "user"
      summary: Reset password and save new one
      description: Reset password and save new one
      operationId: resetpasswordcall
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: Request body to reset password"
        required: true
        schema:
          type: object
          properties:
            code:
              type: string
              default: 'reply'
            newpassword:
              type: string
            password:
              type: string
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      responses:
        200:
          description: OK
      x-swagger-router-controller: "User"

  /user/forgotpassword:
    get:
      tags:
      - "user"
      summary: ask for email as parameter
      description: forgot password api
      produces:
      - application/json
      operationId: forgotPassword
      parameters:
      - in: query
        name: email
        required: true
        type: string
        format: email
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
 
  /user/setpassword:
    post:
      tags:
      - "user"
      summary: reset password by validating with the code
      description: reset password
      operationId: resetPassword
      parameters:
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/resetpassword'
      - in: query
        name: source
        type: string
        required: false
        default: "adviceqube"
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: code is not valid
  
  /user/sendFeedback:
    post:
      tags:
      - "user"
      summary: send feedback to the admin
      description: send feedback
      operationId: sendFeedback
      security: []
      parameters:
      - in: body
        name: body
        required: true
        schema:
           $ref: '#/definitions/Feedback'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error sending email
  
  /user/sendInvite:
    post:
      tags:
      - "user"
      summary: send Invite to list of email
      description: send Invite
      operationId: sendInvite
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: body
        name: body
        required: true
        schema:
           $ref: '#/definitions/invite'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error Sending Email

  /user/sendInfoEmail:
    post:
      tags:
      - "user"
      summary: send informational emails froma admin 
      description: send Info Emails (mass)
      operationId: sendInfoEmail
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: body
        name: body
        required: true
        schema:
           $ref: '#/definitions/infoEmail'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error Sending Email

  /user/sendTemplateEmail:
    post:
      tags:
      - "user"
      summary: send informational emails from admin using template
      description: send Info Emails 
      operationId: sendTemplateEmail
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: templateId
        in: query
        required: true
        type: string
      - in: query
        name: sender
        required: false
        default: contest
        type: string
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error Sending Email

  /user/updateToken:
    put:
      tags:
      - "user"
      summary: Attempt to update token
      description: Update Token
      operationId: updateToken
      parameters:
      - in: body
        name: body
        required: true
        schema:
           $ref: '#/definitions/updateToken'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error Updating Token

  /user/verifyCaptcha:
    post:
      tags:
      - "user"
      summary: Verify captcha token
      description: Verify captcha token
      operationId: verifyCaptchaToken
      parameters:
      - in: body
        name: body
        required: true
        schema:
           $ref: '#/definitions/captchaToken'
      x-swagger-router-controller: "User"
      responses:
        200:
          description: OK
        400:
          description: Error verifying captcha token

  /user/unsubscribe:
    get:
      tags:
      - user
      summary: Unsubsribe from email service
      description: Unsubsribe from email service
      operationId: unsubscribeEmail
      security: []
      parameters:
      - name: email
        in: query
        description: email address of user
        type: "string"
        required: true
      - name: code
        in: query
        type: string
        required: true
      - name: type
        in: query
        type: string
        required: true
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "User"

  /notebook:
    post:
      tags:
      - notebook
      summary: Create a Julia notebook
      description: Create a Julia notebook        
      operationId: createNotebook
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Notebook"

    get:
      tags:
      - notebook
      summary: Get all julia notebooks
      description: Get all Julia notebooks        
      operationId: getNotebooks
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Notebook"

  /notebook/{notebookId}:
    get:
      tags:
      - notebook
      summary: Get Julia notebook
      description: Get Julia notebook
      operationId: getNotebook
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: path
        name: notebookId
        type: string
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Notebook"

  /thread:
    post:
      tags:
      - thread
      summary: post a thread
      description: post a new thread
      operationId: createThread
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Thread'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Thread"
    get:
      tags:
      - thread
      summary: get all threads
      description: get all threads
      operationId: getThreads
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: q
        in: query
        description: search term
        required: false
        type: string
      - name: category
        in: query
        description: this search by category
        required: false
        type: string
      - name: following
        in: query
        description: to get all the posts that i follow 
        required: false
        type: boolean
        default: false
      - name: search
        in: query
        description: title search term
        required: false
        type: string
      - name: userId
        in: query
        description: posts that the given userId following
        required: false
        type: string
      - name: personal
        in: query
        required: false
        type: boolean
        default: false
      - name: skip
        in: query
        description: skip number of records
        required: true
        default: 0
        type: number
      - name: limit
        type: number
        required: true
        in: query
        default: 10
      - name: order_param
        type: string
        required: true
        in: query
        default: createdAt
      - name: order
        type: number
        required: true
        in: query
        default: 0
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Thread"

  /thread_default:
    get:
      tags:
      - thread
      summary: get last 10 threads
      description: get last 10 threads
      operationId: getThreadsDefault
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: order_param
        type: string
        required: false
        in: query
        default: createdAt
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Thread"
  
  /thread/{threadId}:
    post:
      tags:
      - thread
      summary: reply to a thread
      description: reply to a thread
      operationId: replyToThread
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: path
        name: threadId
        type: string
        required: true
      - in: body
        name: body
        required: true
        schema:
          type: object
          properties:
            markdownText:
              type: string
              default: 'reply'
            backtestId:
              type: string
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
    get:
      tags:
      - thread
      summary: get a thread
      description: get thread details
      operationId: getThread
      security: []
      #- api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - in: path
        name: threadId
        type: string
        required: true
      - in: query
        name: skip 
        type: number  
        default: 0
        required: false
        description: skip number replies
      - in: query
        name: limit
        type: number
        default: 10
        required: false
        description: number of replies
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Thread"

  /thread/{threadId}/getfollowers:
    get:
      tags:
      - 'thread'
      summary: get list of followers
      description: get list of followers
      operationId: listFollowers
      security: []
      #- api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - in: path
        name: threadId
        type: string
        required: true
      - name: skip
        in: query
        description: skip number of records
        required: true
        default: 0
        type: number
      - name: limit
        type: number
        required: true
        in: query
        default: 10
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
 
  /thread/{threadId}/like:
    post:
      tags:
      - 'thread'
      summary: like a thread
      description: like a thread
      operationId: likeThread
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: path
        name: threadId
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
 
  /thread/{threadId}/view:
    post:
      tags:
      - 'thread'
      summary: view a thread
      description: view a thread
      operationId: viewThread
      security: []
      #- api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - in: path
        name: threadId
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
 
  /thread/{threadId}/follow:
    post:
      tags:
      - 'thread'
      summary: like a thread
      description: like a thread
      operationId: followThread
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: path
        name: threadId
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
  
  /thread/{threadId}/addtag:
    post:
      tags:
      - 'thread'
      summary: like a tag to thread
      description: like a tag to thread
      operationId: addTagToThread
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: path
        name: threadId
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Thread"
  
  /strategy:
    post:
      tags:
      - "strategy"
      summary: create a new strategy
      description: create a new financial strategy
      consumes:
      - "application/json"
      produces:
      - "application/json"
      operationId: createStrategy
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/Strategy"
      responses:
        200:
          description: "created strategy"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
    get:
      tags:
      - strategy
      summary: get all strategies
      description:  get strategies of user
      operationId: getStrategys
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: search
        in: query
        description: search strategy by name or description
        type: string
        required: false
      - name: sort
        in: query
        description: sort criteria
        type: string
        required: false
        enum: ['name', 'type', 'updatedAt asc', 'updatedAt desc']
      responses:
        200:
          description: "strategies"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
  
  /strategy/{strategyId}:
    get:
      tags:
      - strategy
      summary: get strategy
      description:  get strategies of user
      operationId: getStrategy
      security:
      - api_key: []
      parameters:
      - name: strategyId
        in: path
        required: true
        type: string
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: "strategies"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
    put:
      tags:
      - strategy
      summary: update strategy
      description: update the strategy
      consumes:
      - application/json
      operationId: updateStrategy
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: strategyId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Strategy'
      responses:
        200:
          description: "created strategy"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
    delete:
      tags:
      - strategy
      summary: delete strategy
      description:  delete a strategy of user
      operationId: deleteStrategy
      security:
      - api_key: []
      parameters:
      - name: strategyId
        in: path
        required: true
        type: string
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: "strategies"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
  
  /strategy/{strategyId}/exec:
    post:
      summary: executes the strategy and outputs the data (backtest)
      description: execute the strategy
      tags:
      - strategy
      operationId: execStrategy
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: strategyId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/BacktestSettings"
      responses:
        200:
          description: "created strategy"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Strategy"
    
  /strategy/{strategyId}/backtests:
    get:
      tags:
      - backtest
      summary: get all backtest results of a strategy
      description: backtest of a strategy
      operationId: getBackTests
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: strategyId
        in: path
        required: true
        type: string
      - name: select
        in: query
        required: false
        type: string
      - name: skip
        in: query
        description: skip number of records
        required: true
        default: 0
        type: number
      - name: limit
        type: number
        required: true
        in: query
        default: 10
      - name: sort
        in: query
        type: string
        required: false
        description: sort criteria
      responses:
        200:
          description: "get backtest"
          schema:
            $ref: "#/definitions/Backtest" 
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backtest"
  
  /backtest/{backtestId}:
    get:
      tags:
      - backtest
      summary: get the backtest
      operationId: getBackTest
      security:
      - api_key: []
      parameters:
      - name: aimsquant-token
        in: header
        description: auth token
        type: string
        required:  true
      - name: backtestId
        type: string
        required: true
        in: path
      - name: select
        in: query
        required: false
        type: string
      responses:
        200:
          description: backtest object
          schema:
            $ref: '#/definitions/Backtest'
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backtest"
    delete:
      tags:
      - backtest
      summary: delete the backtest
      operationId: deleteBackTest
      security:
      - api_key: []
      parameters:
      - name: aimsquant-token
        in: header
        description: auth token
        type: string
        required:  true
      - name: backtestId
        type: string
        required: true
        in: path
      responses:
        200:
          description: 'deleted'
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Backtest"
 
  /forwardtest:
    post:
      summary: create a forward test for a corresponding backtest/strategy
      description: create an forward test for ongoing execution
      tags:
      - forwardtest
      operationId: createForwardtest
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema: 
          $ref: '#/definitions/Forwardtest'
        description: Backtest Id
      responses:
        200:
          description: "created forward test"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Forwardtest"
  
  /forwardtest/{forwardtestId}:
    get:
      tags:
      - forwardtest
      summary: get the forwardtest
      operationId: getForwardTest
      security:
      - api_key: []
      parameters:
      - name: aimsquant-token
        in: header
        description: auth token
        type: string
        required:  true
      - name: forwardtestId
        type: string
        required: true
        in: path
      - name: select
        type: string
        required: false
        in: query
      responses:
        200:
          description: Forwardtest object
          schema:
            $ref: '#/definitions/Forwardtest'
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Forwardtest"

    put:
      tags:
      - forwardtest
      summary: update the forwardtest
      operationId: updateForwardTest
      security:
      - api_key: []
      parameters:
      - name: aimsquant-token
        in: header
        description: auth token
        type: string
        required:  true
      - name: forwardtestId
        type: string
        required: true
        in: path
      - name: active
        type: boolean
        required: false
        in: query
      responses:
        200:
          description: forward object
          schema:
            $ref: '#/definitions/Forwardtest'
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Forwardtest"
    
    delete:
      tags:
      - forwardtest
      summary: delete the forwardtest
      operationId: deleteForwardTest
      security:
      - api_key: []
      parameters:
      - name: aimsquant-token
        in: header
        description: auth token
        type: string
        required:  true
      - name: forwardtestId
        type: string
        required: true
        in: path
      responses:
        200:
          description: forwardtest
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Forwardtest"

  /advisor:
    post:
      tags:
      - advisor
      summary: create an advisor
      description: create an advisor
      operationId: createAdvisor
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - in: body
        name: body
        required: true
        schema:
          $ref: '#/definitions/Advisor'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advisor"
    
    get:
      tags:
      - advisor
      summary: get all the advisor
      description: get all the advisor on the platform
      operationId: getAdvisors
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: following
        in: query
        description: "Filter followed advisors"
        type: boolean
        required: false
      - name: search
        in: query
        type: string
        description: search advices by text
        required: false
      - name: registered
        in: query
        type: string
        required: false
        default: "0,1"
        description: sebi registration status of a
      - name: company
        in: query
        type: string
        default: "0,1"
        required: false
        description: company or individual advisor
      - name: skip
        in: query
        description: skip number of records
        required: false
        default: 0
        type: integer
      - name: limit
        in: query
        type: integer
        required: false
        default: 10 
      - name: orderParam
        in: query
        type: string
        required: false
        enum: [rating, numSubscribers, numAdvices]
        default: rating
        description: sort criteria
      - name: order
        in: query
        type: integer
        required: false
        default: -1
        description: sort criteria
      responses:
        200:
          description: "get advisors"
          schema:
            $ref: "#/definitions/Advisor"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Advisor"
  
  /advisor/name:
    get:
      tags:
      - advisor
      summary: search advisor based on firstName and lastName
      description: search advisor based on firstName and lastName
      operationId: fetchAdvisorByName
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: name
        in: query
        type: string
        required: false
        description: user name
      - name: skip
        in: query
        description: skip number of records
        required: true
        default: 0
        type: number
      - name: limit
        type: number
        required: true
        in: query
        default: 10
      responses:
        200:
          description: "get advisor"
        400:
          description: "Not Authorized"
      x-swagger-router-controller: "Advisor"
      
  /advisor/{advisorId}:
    get:
      tags:
      - advisor
      summary: get advisor summary
      description: get advisor for id
      operationId: getAdvisorSummary
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: advisorId
        in: path
        required: true
        description: advisorId
        type: string
      - name: dashboard
        in: query
        type: integer
        required: false
        default: 0
        description: include dashboard related info
      responses:
        200:
          description: "get advisor"
          schema:
            $ref: "#/definitions/Advisor"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Advisor"

  /advisor/{advisorId}/profile:
    put:
      tags:
      - advisor
      summary: update advisor profile
      description: update advisor profile
      operationId: updateAdvisorProfile
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: advisorId
        in: path
        required: true
        description: advisorId
        type: string
      - name: body
        in: body
        required: true
        schema: 
          $ref: '#/definitions/AdvisorProfile'
      responses:
        200:
          description: "updated advisor profile"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Advisor"
  
  /advisor/{advisorId}/follow:
    post:
      tags:
      - 'advisor'
      summary: follow an advisor
      description: follow an advisor
      operationId: followAdvisor
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisorId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advisor"

  /advisor/{advisorId}/approve:
    post:
      tags:
      - 'advisor'
      summary: add aproval or approval related message
      description: Approve an advisor
      operationId: approveAdvisor
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisorId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApprovalMessage'
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advisor"
 
  /advice/validate:
    post:
      tags:
      - advice
      summary: validate an advice
      description: validate an advice
      operationId: validateAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Advice'
      - name: operation
        in: query
        required: true
        type: string
        default: "create"
        enum: ["create", "update"]
      - name: adviceId
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice/validate_default:
    post:
      tags:
      - advice
      summary: validate an advice
      description: validate an advice
      operationId: validateAdvice
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Advice'
      - name: operation
        in: query
        required: true
        type: string
        default: "create"
        enum: ["create", "update"]
      - name: adviceId
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice/create:
    post:
      tags:
      - advice
      summary: create an advice
      description: create an advice
      operationId: createAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Advice'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"
  
  /advice:
    get:
      tags:
      - advice
      summary: get all advice (summary only)
      description: get advice
      operationId: getAdvices
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: search
        in: query
        type: string
        description: search advices by text
        required: false
      - name: contestOnly
        in: query
        type: boolean
        required: false
        default: false
        description: select advices that are contest only
      - name: all
        in: query
        type: boolean
        required: false
        default: true
        description: select all advices flag
      - name: trending
        in: query
        type: boolean
        required: false
        default: false
        description: select trending advices flag
      - name: subscribed
        in: query
        type: boolean
        required: false
        default: false
        description: select subscribed advice flag
      - name: following
        in: query
        type: boolean
        required: false
        default: false
        description: select wishlist advice flag
      - name: performanceType
        in: query
        required: false
        type: string
        default: "simulated"
        description: filter type of performance
      - name: netValue
        in: query
        required: false
        type: string
        default: "0,200000"
        description: filter on netvalue of advice
      - name: sharpe
        in: query
        required: false
        type: string
        default: "-5,5"
        description: filter on sharpe ratio of advice
      - name: totalReturn
        in: query
        required: false
        type: string
        default: "-100,100"
        description: filter on return of advice
      - name: volatility
        in: query
        required: false
        type: string
        default: "0,50"
        description: filter on volatility of advice
      - name: rating
        in: query
        required: false
        type: string
        default: "0,5"
        description: filter on value of advice
      - name: rebalance
        in: query
        required: false
        type: string
        default: "Daily,Weekly,Bi-Weekly,Monthly,Quartely"
        description: rebalance frequency
      - name: advisor
        in: query
        type: string
        format: uuid
        required: false
        description: advisor id
      - name: personal
        in: query
        type: string
        required: false
        default: "0,1"
        description: advice owner
      - name: approved
        in: query
        type: string
        default: "0,1,-1"
        required: false
        description: approval status
      - name: skip
        in: query
        type: integer
        required: false
        default: 0
        description: skip records
      - name: limit
        in: query
        type: integer
        required: false
        default: 10
        description: total number of advice
      - name: orderParam
        in: query
        description: sort criteria
        type: string
        required: false
        default: rating
        enum: [name, rating, return, volatility, sharpe, maxLoss, currentLoss, netValue, dailyChange, numFollowers, numSubscribers, createdDate]
      - name: order
        type: number
        required: true
        in: query
        default: -1
        description: sort order
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice_default:
    get:
      tags:
      - advice
      summary: get all advice (summary only)
      description: get advice
      operationId: getAdvicesDefault
      security: []
      parameters:
      - name: search
        in: query
        type: string
        description: search advices by text
        required: false
      - name: all
        in: query
        type: boolean
        required: false
        default: true
        description: select all advices flag
      - name: trending
        in: query
        type: boolean
        required: false
        default: false
        description: select trending advices flag
      - name: subscribed
        in: query
        type: boolean
        required: false
        default: false
        description: select subscribed advice flag
      - name: following
        in: query
        type: boolean
        required: false
        default: false
        description: select wishlist advice flag
      - name: performanceType
        in: query
        required: false
        type: string
        default: "simulated"
        description: filter type of performance
      - name: netValue
        in: query
        required: false
        type: string
        default: "0,200000"
        description: filter on netvalue of advice
      - name: sharpe
        in: query
        required: false
        type: string
        default: "-5,5"
        description: filter on sharpe ratio of advice
      - name: totalReturn
        in: query
        required: false
        type: string
        default: "-100,100"
        description: filter on return of advice
      - name: volatility
        in: query
        required: false
        type: string
        default: "0,50"
        description: filter on volatility of advice
      - name: rating
        in: query
        required: false
        type: string
        default: "0,5"
        description: filter on value of advice
      - name: rebalance
        in: query
        required: false
        type: string
        default: "Daily,Weekly,Bi-Weekly,Monthly,Quartely"
        description: rebalance frequency
      - name: advisor
        in: query
        type: string
        format: uuid
        required: false
        description: advisor id
      - name: personal
        in: query
        type: string
        required: false
        default: "0,1"
        description: advice owner
      - name: approved
        in: query
        type: string
        default: "0,1"
        required: false
        description: approval status
      - name: skip
        in: query
        type: integer
        required: false
        default: 0
        description: skip records
      - name: limit
        in: query
        type: integer
        required: false
        default: 10
        description: total number of advice
      - name: orderParam
        in: query
        description: sort criteria
        type: string
        required: false
        default: rating
        enum: [name, rating, return, volatility, sharpe, maxLoss, currentLoss, netValue, dailyChange, numFollowers, numSubscribers, createdDate]
      - name: order
        type: number
        required: true
        in: query
        default: -1
        description: sort order
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice_default/{adviceId}:
    get:
      tags:
      - advice
      summary: get advice summary 
      description: Gets just the advice basic details (without token)
      operationId: getAdviceSummary_notoken
      security: []
      parameters:
      - name: adviceId
        in: path
        type: string
        required: true
      - name: fullperformance
        in: query
        type: boolean
        default: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}:
    patch:
      tags:
      - advice
      summary: update advice 
      description: updates the advice 
      consumes:
      - application/json
      operationId: updateAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema: 
          $ref: '#/definitions/Advice'
      responses:
        200:
          description: "updated advice"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Advice"
  
    delete:
      tags:
      - advice
      summary: delete an advice
      description:  delete advice 
      operationId: deleteAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        required: true
        type: string
      responses:
        200:
          description: "advice"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Advice"

    get:
      tags:
      - advice
      summary: get advice summary 
      description: Gets just the advice basic details 
      operationId: getAdviceSummary
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      - name: fullperformance
        in: query
        type: boolean
        default: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"
  
  /advice/{adviceId}/detail:    
    get:
      tags:
      - advice
      summary: get advice detail
      description: Gets the complete advice detail
      operationId: getAdviceDetail
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      - name: fields
        in: query
        type: string
        default: ""
        required: false
        description: selection fields
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/portfolio:    
    get:
      tags:
      - advice
      summary: get advice portfolio for any date
      description: Gets the advice portfolio for any date
      operationId: getAdvicePortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      - name: date
        in: query
        type: string
        required: false
        description: date
      - name: history
        in: query
        type: boolean
        default: false
        required: false
        description: portfolio history
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Advice"  
  
  /advice/{adviceId}/publish:
    post:
      tags:
      - advice
      summary: publish an advice
      description: publish an advice
      operationId: publishAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/follow:
    post:
      tags:
      - advice
      summary: follow an advice
      description: follow an advice
      operationId: followAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/subscribe:
    post:
      tags:
      - advice
      summary: subscribe an advice
      description: subscribe an advice
      operationId: subscribeAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/approve:
    post:
      tags:
      - 'advice'
      summary: add aproval or approval related message
      description: Approve an advice
      operationId: approveAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApprovalMessage'
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/approveNew:
    patch:
      tags:
      - 'advice'
      summary: add approval or approval related message based on the new implementation
      description: Approve an advice based on the new implementation
      operationId: approveAdviceNew
      security:
      - api_key: []
      parameters: 
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ApprovalMessageNew'
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /advice/{adviceId}/requestapproval:
    post:
      tags:
      - 'advice'
      summary: request approval of advice 
      description: Request approval of an advice
      operationId: requestApproveAdvice
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Advice"

  /investor:
    post:
      tags:
      - investor
      summary: create an investor
      description: create an investor
      operationId: createInvestor
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Investor'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"
    
  /investor/{investorId}:
    get:
      tags:
      - investor
      summary: get the summary of investor 
      description: get investor for id
      operationId: getInvestorSummary
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        required: true
        type: string
      responses:
        200:
          description: "get investor for id"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Investor"
  
  /investor/{investorId}/detail:
    get:
      tags:
      - investor
      summary: get an investor 
      description: get investor for id
      operationId: getInvestorDetail
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        required: true
        type: string
      - name: fields
        in: query
        type: string
        default: ""
        required: false
        description: selection fields
      responses:
        200:
          description: "get investor for id"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Investor"

  /investor/{investorId}/portfolio:
    get:
      tags:
      - investor
      summary: get all portfolios for investor
      description: get all portfolios for investor
      operationId: getInvestorPortfolios
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: ticker
        in: query
        default: ""
        required: false
        type: string
        description: stock ticker
      - name: exchange
        in: query
        required: false
        default: NSE
        type: string
        description: stock exchange      
      - name: country
        in: query
        required: false
        type: string
        default: IN
        description: security country
      - name: securityType
        in: query
        required: false
        type: string
        default: EQ
        description: security type
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"  

    post:
      tags:
      - investor
      summary: create an Investor portfolio
      description: create an investor portfolio
      operationId: createInvestorPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/CreatePortfolio'
          
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"
  
  /investor/{investorId}/portfolio/{portfolioId}:
    get:
      tags:
      - investor
      summary: get portfolio for investor
      description: Gets the complete portfolio for an investor
      operationId: getInvestorPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: portfolioId
        in: path
        type: string
        required: true
      - name: fields
        in: query
        type: string
        required: false
        description: selection fields
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"  
  
    delete:
      tags:
      - investor
      summary: remove portfolio for investor
      description: Removes the complete portfolio for an investor
      operationId: deleteInvestorPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: portfolioId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"  

    put:
      tags:
      - investor
      summary: update the portfolio
      description: Updates the portfolio
      operationId: updateInvestorPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: portfolioId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: false
        schema:
          $ref: '#/definitions/Portfolio'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor"

  /investor/{investorId}/portfolio/{portfolioId}/transactions:
    post:
      tags:
      - investor
      summary: update the portfolio with transactions
      description: Updates the portfolio with transactions
      operationId: updateInvestorPortfolioForTransactions
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: portfolioId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/TransactionsAction'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor" 

  /investor/{investorId}/portfolio/{portfolioId}/defaultPortfolio:
    post:
      tags:
      - investor
      summary: update the default portfolio of investor
      description: Update the default portfolio of the investor
      operationId: updateInvestorDefaultPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        type: string
        required: true
      - name: portfolioId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Investor" 

  /stock/detail:
    get:
      tags:
      - stock
      summary: get stock history and/or performance detail
      description: get stock history and/or performance detail
      operationId: getStockDetail
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: ticker
        in: query
        type: string
        required: true
        description: security ticker
      - name: exchange
        in: query
        type: string
        required: false
        default: "NSE"
        description: security exchange
      - name: country
        in: query
        type: string
        required: false
        default: "IN"
        description: security country
      - name: securityType
        in: query
        type: string
        required: false
        default: "EQ"
        description: security type
      - name: startDate
        in: query
        type: string
        required: false
        format: date
        description: start date of priceHistory
      - name: endDate
        in: query
        type: string
        required: false
        format: date
        description: end date of priceHistory
      - name: field
        in: query
        type: string
        required: true
        default: "priceHistory"
        enum: ['priceHistory', 'staticPerformance', 'rollingPerformance', 'latestDetail', 'intraDay']
      responses:
        200:
          description: "get stock performance detail"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Stock"

  /stock/detail_benchmark:
    get:
      tags:
      - stock
      summary: get stock history of benchmark securities
      description: get stock history of benchmark securities
      operationId: getStockDetailBenchmark
      security: []
      parameters:
      - name: ticker
        in: query
        type: string
        required: true
        description: security ticker
      - name: exchange
        in: query
        type: string
        required: false
        default: "NSE"
        description: security exchange
      - name: country
        in: query
        type: string
        required: false
        default: "IN"
        description: security country
      - name: securityType
        in: query
        type: string
        required: false
        default: "EQ"
        description: security type
      - name: startDate
        in: query
        type: string
        required: false
        format: date
        description: start date of priceHistory
      - name: endDate
        in: query
        type: string
        required: false
        format: date
        description: end date of priceHistory  
      - name: field
        in: query
        type: string
        required: true
        default: "priceHistory" 
      responses:
        200:
          description: "get stock performance detail"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Stock"

  /stock:
    get:
      tags:
      - stock
      summary: get stock list matching criteria
      description: get stock list matching criteria
      operationId: getStocks
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: search
        in: query
        type: string
        required: false
        default: ""
      - name: universe
        in: query
        type: string
        required: false
      - name: sector
        in: query
        type: string
        required: false
      - name: industry
        in: query
        type: string
        required: false
      - name: exclude
        in: query
        type: string
        required: false
      - name: populate
        in: query
        type: boolean
        required: false
        default: false
      - name: skip
        in: query
        type: number
        required: false
        default: 0
      - name: limit
        in: query
        type: number
        required: false
        default: 5
      responses:
        200:
          description: "get list of stocks matching criteria"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Stock"

  /performance/investor/{investorId}/{portfolioId}:
    get:
      tags:
      - performance
      summary: get portfolio historical performance
      description: get portfolio historical performance
      operationId: getPerformanceInvestorPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: investorId
        in: path
        required: true
        type: string
        description: investorId
      - name: portfolioId
        in: path
        required: true
        type: string
        description: portfolioId
      responses:
        200:
          description: "get stock performance detail"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Performance"

  /performance/advice/{adviceId}:
    get:
      tags:
      - performance
      summary: get portfolio historical performance of advice portfolio
      description: get portfolio historical performance of advice portfolio
      operationId: getPerformanceAdvicePortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: adviceId
        in: path
        required: true
        type: string
        description: adviceId
      responses:
        200:
          description: "get stock performance detail of advice portfolio"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Performance"

  /performance/contestentry/{entryId}:
    get:
      tags:
      - performance
      summary: get portfolio historical performance of contestentry portfolio
      description: get portfolio historical performance of contest entry portfolio
      operationId: getPerformanceContestEntryPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        required: true
        type: string
        description: Conest Entry Id
      responses:
        200:
          description: "get stock performance detail of contest entry portfolio"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Performance"

  /performance:
    post:
      tags:
      - performance
      summary: get portfolio historical performance
      description: get portfolio historical performance
      operationId: getPerformanceNewPortfolio
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: body
        in: body
        required: true
        schema: 
          $ref: '#/definitions/Portfolio'
        description: Portfolio 
      responses:
        200:
          description: "get stock performance detail"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Performance"

  /watchlist:
    post:
      tags:
        - watchlist
      summary: create a watchlist
      description: create a watchlist
      operationId: createWatchlist
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: header
        description: "auth token"
        type: string
        required: true
      - name: userId
        in: query
        type: string
        required: false
        description: "userId of the user for which the watchlist needs to be created"
      - name: body
        in: body
        required: true
        schema:
          $ref: "#/definitions/Watchlist"
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "Watchlist"
    
    get:
      tags:
        - watchlist
      summary: get all watchlists for a user
      description: get all watchlist for a user
      operationId: getAllWatchlists
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: header
        description: "auth token"
        type: string
        required: true
      - name: userId
        in: query
        type: string
        required: false
        description: "userId of the user for which the watchlist needs to be created"
      - name: name
        in: query
        type: string
        required: false
        description: "watchlist name"
      responses:
        200:
          description: OK
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Watchlist"
  
  /config:
    get:
      tags:
        - config
      summary: Get static configs
      description: get static configurations required in the frontend
      operationId: getConfig
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: type
        in: query
        type: string
        description: type of configuration
        required: false
      - name: benchmark
        in: query
        type: string
        description: benchmark for contest
        required: false
      responses:
        200:
          description: OK
      x-swagger-router-controller: "Config"


  /watchlist/{watchlistId}:
    get:
      tags:
      - watchlist
      summary: Get stock watchlist
      description: retrieve stock watchlist
      operationId: getWatchlist
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: userId
        in: query
        type: string
        required: false
        description: "userId of the user for which the watchlist needs to be created"
      - name: watchlistId
        in: path
        required: true
        type: string
      responses:
        200:
          description: "get watchlist"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Watchlist"
    
    put:
      tags:
      - watchlist
      summary: Update stock watchlist
      description: Update stock watchlist
      operationId: updateWatchlist
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: watchlistId
        in: path
        required: true
        type: string
      - name: userId
        in: query
        type: string
        required: false
        description: "userId of the user for which the watchlist needs to be created"
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Watchlist'
      responses:
        200:
          description: "updated watchlist"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Watchlist"

    delete:
      tags:
      - watchlist
      summary: Delete stock watchlist
      description: delete stock watchlist
      operationId: deleteWatchlist
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: string
        required: true
      - name: userId
        in: query
        type: string
        required: false
        description: "userId of the user for which the watchlist needs to be created"
      - name: watchlistId
        in: path
        required: true
        type: string
      responses:
        200:
          description: "delete watchlist"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "Watchlist"

  /contest:
    post:
      tags: 
      - contest
      summary: create a contest
      description: create a contest
      operationId: createContest
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/Contest'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "Contest"
    
    get:
      tags:
      - contest
      summary: get all contests
      description: get all contests
      operationId: getContests
      parameters:
      - name: current
        in: query
        type: boolean
        default: false
        description: Get contests that are valid for participation
        
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "Contest"
      
  /contest/all:
    get:
      tags:
      - contest
      summary: get all contests, active, inactive or all
      description: get all contests, active, inactive or all
      operationId: getAllContests
      parameters:
      - name: active
        in: query
        type: integer
        default: 0
        description: Get all contests (active, inactive or all)
      
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "Contest"
  
  /contest/{contestId}:
    get:
      tags:
      - contest
      summary: get contest summary
      description: get contest description
      operationId: getContest
      parameters:
      - name: contestId
        in: path
        type: string
        required: true
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "Contest"

    patch:
      tags:
      - contest
      summary: update a contest
      description: Update a contest, provide only the details to be updated
      consumes:
      - application/json
      operationId: updateContest
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: contestId
        in: path
        type: string
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ContestPatch'
      responses: 
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "Contest"

  /contest/{contestId}/entries:
    get:
      tags:
      - contest
      summary: get contest enries
      description: Get all the entries in a particular contest
      operationId: getEntriesInContest
      parameters:    
      - name: contestId
        in: path
        type: string
        required: true
      - name: skip
        in: query
        type: integer
        required: false
        default: 0
        description: skip records
      - name: limit
        in: query
        type: integer
        required: false
        default: 10
        description: number of advices required
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest"
  
  /contest/entry/all/{entryId}:
    get:
      tags:
      - contest
      summary: get the contest entry's rank summary for all contest
      description: Get the advice summary of an advice that is inside the specific contest
      operationId: getContestEntryRankSummaryInAllContests
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        required: true
        type: string
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest" 
  
  /contest/entry/{entryId}:
    get:
      tags:
      - contest
      summary: get the contest entry summary inside the contest
      description: Get the advice summary inside the contest
      operationId: getContestEntryRankSummaryInLatestContest
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        required: true
        type: string
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest"

  /contest/{entryId}/action:
    post:
      tags:
      - contest
      summary: insert, prohibit or withdraw a contest entry
      description: Insert, Prohibit or Withdraw a conest entry from the Contest
      operationId: updateEntryInContest
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        required: true
        type: string
      - name: type
        in: query
        type: string
        default: 'enter'
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest"

  /contest/updateRanks:
    get:
      tags:
      - contest
      summary: update the ranks of all advices of all contests
      description: Update the ranking of all the advices inside a contest
      operationId: updateAllContestRanks
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest"

  /contest/winneremail:
    get:
      tags:
      - contest
      summary: send email to winners
      description: send email to winners
      operationId: sendEmailToContestWinners
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "Contest"

  /contestentry/validate:
    post:
      tags:
      - contestentry
      summary: validate a contest entry
      description: validate a contest entry
      operationId: validateContestEntry
      security: 
        - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ContestEntry'
      - name: operation
        in: query
        required: true
        type: string
        default: "create"
        enum: ["create", "update"]
      - name: entryId
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"

  /contestentry/validate_default:
    post:
      tags:
      - contestentry
      summary: validate a contest entry
      description: validate a contest entry
      operationId: validateContestEntry
      security: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: false
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ContestEntry'
      - name: operation
        in: query
        required: true
        type: string
        default: "create"
        enum: ["create", "update"]
      - name: entryId
        in: query
        required: false
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"

  /contestentry/create:
    post:
      tags:
      - contestentry
      summary: create a contest entry
      description: create a contest entry
      operationId: createContestEntry
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: body
        in: body
        required: true
        schema:
          $ref: '#/definitions/ContestEntry'
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"
  
  /contestentry:
    get:
      tags:
      - contestentry
      summary: get all contest entries
      description: get contest entries
      operationId: getContestEntries
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisor
        in: query
        type: string
        format: uuid
        required: false
        description: advisor id
      - name: personal
        in: query
        type: string
        required: false
        default: "0,1"
        description: advice owner
      - name: skip
        in: query
        type: integer
        required: false
        default: 0
        description: skip records
      - name: limit
        in: query
        type: integer
        required: false
        default: 10
        description: limit number of entries
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"

  /contestentry/{entryId}:
    patch:
      tags:
      - contestentry
      summary: update contest entry 
      description: updates the contest entry 
      consumes:
      - application/json
      operationId: updateContestEntry
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        required: true
        type: string
      - name: body
        in: body
        required: true
        schema: 
          $ref: '#/definitions/ContestEntry'
      responses:
        200:
          description: "updated advice"
        400:
          description: "Not Authorized"
          schema:
            $ref: "#/definitions/Error"
      x-swagger-router-controller: "ContestEntry"
  
    get:
      tags:
      - contestentry
      summary: get contest entry summary 
      description: Get contest entries basic details 
      operationId: getContestEntrySummary
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        type: string
        required: true
      - name: fullperformance
        in: query
        type: boolean
        default: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"
  
  /contestentry/{entryId}/detail:    
    get:
      tags:
      - contestentry
      summary: get contest entry detail
      description: Gets the complete contest entry detail
      operationId: getContestEntryDetail
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        type: string
        required: true
      - name: fields
        in: query
        type: string
        default: ""
        required: false
        description: selection fields
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"

  /contestentry/{entryId}/portfolio:    
    get:
      tags:
      - contestentry
      summary: get contest entry portfolio for any date
      description: Gets the contest entry portfolio for any date
      operationId: getContestEntryPortfolio
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: entryId
        in: path
        type: string
        required: true
      - name: date
        in: query
        type: string
        required: false
        description: date
      - name: history
        in: query
        type: boolean
        default: false
        required: false
        description: portfolio history
      responses:
        200:
          description: OK
        400:
          description: 'Invalid input'
      x-swagger-router-controller: "ContestEntry"  


  # /dailycontest:
  #   post:
  #     tags: 
  #     - dailycontest
  #     summary: create a daily contest
  #     description: create a daily contest
  #     operationId: createDailyContest
  #     security: 
  #     - api_key: []
  #     parameters:
  #     - name: "aimsquant-token"
  #       in: "header"
  #       description: "auth token"
  #       type: "string"
  #       required: true
  #     - name: body
  #       in: body
  #       required: true
  #       schema:
  #         $ref: '#/definitions/DailyContest'
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: 'Invalid Input'
  #     x-swagger-router-controller: "DailyContest"

  #   get:
  #     tags: 
  #     - dailycontest
  #     summary: get the daily contest by Id
  #     description: get a daily contest
  #     operationId: getDailyContest
  #     security: 
  #     - api_key: []
  #     parameters:
  #     - name: "aimsquant-token"
  #       in: "header"
  #       description: "auth token"
  #       type: "string"
  #       required: true
  #     - name: date
  #       in: query
  #       type: string
  #       format: date
  #       description: date of contest
  #       required: false
  #     responses:
  #       200:
  #         description: OK
  #       400:
  #         description: 'Invalid Input'
  #     x-swagger-router-controller: "DailyContest"=#

  /dailycontest/prediction:
    post:
      tags: 
      - dailycontest
      summary: Add stock predictions 
      description: add stock predictions
      operationId: updateDailyContestPredictions
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisorId
        required: false
        in: query
        description: advisorId of the user for which the prediction is to be made
        type: string
      - name: body
        in: body
        required: true
        description: "schema body"
        schema:
          $ref: "#/definitions/DailyContestPredictions"
      - name: operation
        in: query
        required: true
        type: string
        default: "insert"
        enum: ["update", "insert"]
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

    get:
      tags: 
      - dailycontest
      summary: get the daily contest entry for user
      description: get a daily contest user
      operationId: getDailyContestPredictions
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        type: string
        format: date
        description: date of contest
        required: false
      - name: category
        in: query
        type: string
        description: status of prediction
        default: "all"
        enum: ["started", "ended", "all"]
        required: false
      - name: advisorId
        required: false
        in: query
        description: advisorId of the user for which the prediction is to be made
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/exitPrediction:
    post:
      tags: 
      - dailycontest
      summary: Exit stock prediction 
      description: exit stock predictions
      operationId: exitDailyContestPrediction
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: predictionId
        in: query
        description: prediction id
        type: string
        required: true 
      - name: advisorId
        in: query
        description: advisor id
        type: string
        required: false 
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/pnl:
    get:
      tags: 
      - dailycontest
      summary: get the pnl of contest entry
      description: get the pnl of contest entry
      operationId: getDailyContestPnlForDate
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        type: string
        format: date
        description: date of contest
        required: false
      - name: category
        in: query
        type: string
        description: status of prediction
        default: "all"
        enum: ["all", "ended", "started"]
        required: false
      - name: advisorId
        required: false
        in: query
        description: advisorId of the user for which the prediction is to be made
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

    post:
      tags:
      - dailycontest
      summary: update daily contest pnl-stats (run job)
      description: update daily contest pnl-stats (run job)
      operationId: updateDailyContestPnlForDate
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "DailyContest"

  /dailycontest/portfoliostats:
    get:
      tags: 
      - dailycontest
      summary: get the portfolio-stats of contest entry
      description: get the portfolio-stats of contest entry
      operationId: getDailyContestPortfolioStatsForDate
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        type: string
        format: date
        description: date of contest
        required: false
      - name: advisorId
        required: false
        in: query
        description: advisorId of the user for which the prediction is to be made
        type: string
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/nextstock:
    get:
      tags: 
      - dailycontest
      summary: get nextstock for possible prediction
      description: get nextstock for possible prediction
      operationId: getDailyContestNextStock
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: search
        in: query
        type: string
        required: false
        default: ""
      - name: universe
        in: query
        type: string
        required: false
      - name: sector
        in: query
        type: string
        required: false
      - name: industry
        in: query
        type: string
        required: false
      - name: exclude
        in: query
        description: exlcude tickers
        type: string
        required: false
      - name: populate
        in: query
        description: populate detail
        type: boolean
        required: false  
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/topstocks:
    get:
      tags: 
      - dailycontest
      summary: get top stocks for the contest 
      description: get top stocks for the contest
      operationId: getDailyContestTopStocks
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        type: string
        format: date
        description: date of contest
        required: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

    post:
      tags:
      - dailycontest
      summary: update daily contest top stocks (run job)
      description: update daily contest tops stocks (run job)
      operationId: updateDailyContestTopStocks
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "DailyContest"

  /dailycontest/leaderboard:
    get:
      tags: 
      - dailycontest
      summary: get winners of daily contest
      description: get winners of daily contest
      operationId: getDailyContestWinners
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        type: string
        format: date
        description: date of contest
        required: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"
  
  /dailycontest/overallWinners:
    get:
      tags: 
      - dailycontest
      summary: get overall winners of daily contest
      description: get overall winners of daily contest
      operationId: getDailyContestOverallWinners
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: skip
        in: query
        type: integer
        required: false
        default: 0
        description: skip records
      - name: limit
        in: query
        type: integer
        required: false
        default: 10
        description: number of documents required
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/stats:
    get:
      tags: 
      - dailycontest
      summary: get stats for users
      description: get stats for users
      operationId: getDailyContestStats
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisor
        in: query
        required: false
        type: string
        description: advisor id of the user for whom stats required
      - name: category
        in: query
        required: false
        type: string
        default: "general"
        enum: ["general", "pnl", "prediction"]
      - name: symbol
        in: query
        type: string
        description: symbol for stats
        required: false
      - name: horizon
        in: query
        type: number
        description: horizon for stats
        required: false
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"


  /dailycontest/performance:
    get:
      tags: 
      - dailycontest
      summary: get portfolio stats for users
      description: get portfolio stats for users
      operationId: getDailyContestPerformanceStats
      security: 
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: advisor
        in: query
        required: false
        type: string
        description: advisor id of the user for whom stats required
      responses:
        200:
          description: OK
        400:
          description: 'Invalid Input'
      x-swagger-router-controller: "DailyContest"

  /dailycontest/winneremail:
    get:
      tags:
      - dailycontest
      summary: send email to winners
      description: send email to winners
      operationId: sendEmailToDailyContestWinners
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        description: date
        type: string
        format: date 
        required: false
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "DailyContest"

  /dailycontest/summaryemail:
    get:
      tags:
      - dailycontest
      summary: send email to winners
      description: send email to winners
      operationId: sendSummaryEmailToParticipants
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: date
        in: query
        description: date
        type: string
        format: date 
        required: false
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "DailyContest"

  /dailycontest/templateemail:
     get:
      tags:
      - dailycontest
      summary: send tempate email to contest participants
      description: send tempate email to contest participants
      operationId: sendTemplateEmailToParticipants
      security:
      - api_key: []
      parameters:
      - name: "aimsquant-token"
        in: "header"
        description: "auth token"
        type: "string"
        required: true
      - name: emailType
        in: query
        type: string
        default: "all"
        enum: ["all", "zeroPredictions", "lowProfitabilityLowPredictions", "highProfitabilityLowPredictions", "lowProfitabilityHighPredictions", "highProfitabilityHighPredictions"]
        description: sendgrid templateId
        required: true
      responses:
        200:
          description: OK
        400:
          description: Invalid Input
      x-swagger-router-controller: "DailyContest"

securityDefinitions:
  api_key:
    type: apiKey
    name: aimsquant-token
    in: header

definitions:
  User:
    type: "object"
    required:
    - firstName
    - lastName
    - email
    - password
    properties:
      firstName:
        type: "string"
      lastName:
        type: "string"
      email:
        type: "string"
      password:
        type: "string"
      phone:
        type: "string"
      photo:
        type: "string"
      aboutme:
        type: "string"
      education:
        type: "string"
      profession:
        type: "string"

  Login:
    type: "object"
    properties:
      email:
        type: "string"
      password:
        type: "string"

  GoogleLogin:
    type: object
    properties:
      accessToken:
        type: string
  
  Thread:
    type: object
    required:
    - category
    - title
    - markdownText
    properties:
      category:
        type: string
        enum:
        - "Share your Idea"
        - "Questions and Answers"
        - "News and Announcements"
      title:
        type: string
      markdownText:
        type: string
      backtestId:
        type: string
  
  resetpassword:
    type: object
    required:
    - password1
    - password2
    - code
    properties:
      password1:
        type: "string"
      password2:
        type: "string"
      code:
        type: "string"
        format: "uuid"

  updateToken:
    type: object
    required:
      - token
      - email
    properties:
      token:
        type: string
      email:
        type: string
      force:
        type: boolean
        default: false

  captchaToken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  
  Error:
    type: "object"
    properties:
      code:
        type: "string"
      message:
        type: "string"

# strategy definitions
  Strategy:
    type: object
    required:
    - name
    - type
    - description
    properties:
      name:
        type: string
      type:
        type: string
        enum: ['GUI', 'CODE']
      description:
        type: string
      code:
        type: string
      entryConditions:
        type: array
        items:
          $ref: "#/definitions/TradeCondition"
      exitConditions:
        type: array
        items:
          $ref: "#/definitions/TradeCondition"
      entryLogic:
        type: string
      exitLogic:
        type: string
      tradeDirection:
        type: string

  
  TradeCondition:
    type: object
    required:
      - indicator1
      - indicator2
      - operator
      - name
    properties:
      indicator1:
        $ref: "#/definitions/TradeIndicator"
      indicator2:
        $ref: "#/definitions/TradeIndicator"
      operator:
        type: string
        enum: ["LT", "LTE", "GT", "GTE", "EQ", "CA", "CB"]
      name:
        type: string

  TradeIndicator:
    type: object
    required:
      - name
      - params
    properties:
      name:
        type: string
      params:
        type: object 


  BacktestSettings:
    type: object
    required:
      - startDate
      - endDate
      - initialCash
    properties:
      startDate:
        type: string
      endDate:
        type: string
      initialCash:
        type: number
        format: long
      universe:
        type: string
      advanced:
        type: string  

  Backtest:
    type: object
    required:
      - settings
    properties:
      settings:
        $ref: "#/definitions/BacktestSettings"

  Forwardtest:
    type: object
    required:
      - strategyId
      - backtestId
    properties:
      strategyId:
        type: string
      backtestId:
        type: string

  Feedback:
    type: object
    required:
    - feedback
    - subject
    - from
    - to
    properties:
      feedback:
        type: string
      subject:
        type: string
      from:
        type: string
      to:
        type: string
        default: "feedback@aimsquant.com"
  
  invite:
    type: object
    required:
    - emailList
    properties:
      emailList:
        type: string

  infoEmail:
    type: object
    required:
    - templateFileName
    - subject
    properties:
      templateFileName:
        type: string
      subject:
        type: string

#Security
  Security:
    type: object
    required:
      - ticker
      #- securityType
      #- country
      #- exchange
    properties:
      ticker:
        type: string
      securityType: 
        type: string
        default: "EQ"
      country:
        type: string
        default: "IN"
      exchange:
        type: string
        default: "NSE"

#Position
  Position:
    type: object
    required:
      - security
    properties:
      security:
        $ref: '#/definitions/Security'
      investment:
        type: number
        format: number
        default: 0.0  
      quantity:
        type: number
        format: long
        default: 0
      avgPrice:
        type: number
        default: 0.0

#Transaction
  Transaction:
    type: object
    required:
      - security
      - quantity
      - date
    properties:
      security:
        $ref: '#/definitions/Security'
      quantity:
        type: integer
      price:
        type: number
        default: 0.0
      fee:
        type: number
      date:
        type: string
        format: date
      commission:
        type: number
        default: 0.0
      cashLinked:
        type: boolean
        default: false
      advice:
        type: string
        format: uuid
        default: ""
      _id:
        type: string
        format: uuid
        default: ""

  TransactionsAction:
    type: object
    required:
      - preview
      - action
      - transactions     
    properties:
      preview:
        type: boolean
        default: true
      action:
        type: string
        enum: ["add", "update", "delete"]
        default: "add"
      transactions: 
        type: array
        items:
          $ref: '#/definitions/Transaction'

#CreatePortfolio
  CreatePortfolio:
    type: object
    required:
      - name
      - benchmark
      - transactions
      - preview
    properties:
      name:
        type: string
      benchmark:
        $ref: '#/definitions/Security'
      transactions:
        type: array
        items:
          $ref: '#/definitions/Transaction'
      preview: 
        type: boolean
        default: true
      setdefault:
        type: boolean
        default: false

#PortfolioDetail
  PortfolioDetail:
    type: object
    required:
      - positions
      - cash
      - positionType
    properties:
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      positions:
        type: array
        items:
          $ref: '#/definitions/Position'
      cash:
        type: number
        default: 0.0
      positionType:
        type: string
        default: 'shares'
        enum: ['shares', 'notional']
    
#Portfolio
  Portfolio:
    type: object
    required:
        - detail
        - benchmark 
    properties:
      name:
        type: string
        default: ""
      detail:
        $ref: '#/definitions/PortfolioDetail'
      benchmark:
        $ref: '#/definitions/Security'
      
#Advice definition
  Advice:
    type: object
    required:
      - name
      - portfolio
      - rebalance
      - maxNotional
      - investmentObjective
    properties:
      name:
        type: string
      portfolio:
        $ref: "#/definitions/Portfolio"
      rebalance:
        type: string
        enum: ['Daily', 'Weekly', 'Bi-Weekly', 'Monthly', 'Quartely']
      maxNotional:
        type: integer
        enum: [10000, 20000, 50000, 75000, 100000, 200000, 300000, 500000, 750000, 1000000]
      investmentObjective:
        $ref: '#/definitions/InvestmentObjective'
      public:
        type: boolean
        default: false
      contestOnly:
        type: boolean
        default: false


#Investor
  Investor:
    type: object
     
# Advisor definitions
  Advisor:
    type: object

# Advisor Profile
  AdvisorProfile:
    type: object
    properties:
      isCompany: 
        type: boolean
        default: false
      companyName: 
        type: string
        default: ""
      companyRegistrationNum:
        type: string
        default: ""
      isSebiRegistered: 
        type: boolean
        default: false
      sebiRegistrationNum:
        type: string
        default: ""
      webUrl: 
        type: string
        default: ""
      photoUrl:
        type: string
        default: ""
      address: 
        $ref: '#/definitions/Address'
      phone: 
        type: string
        default: ""
      linkedIn:
        $ref: '#/definitions/SocialProfile'
      facebook: 
        $ref: '#/definitions/SocialProfile'
      twitter:
        $ref: '#/definitions/SocialProfile'

# Watchlist definitions
  Watchlist:
    type: object
    required:
      - name
      - securities
    properties:
      name:
        type: string
      securities:
        type: array
        items:
          $ref: '#/definitions/Security'

  Address:
    type: object
    properties:
      line1:
        type: string
        default: ""
      line2:
        type: string
        default: ""
      line3:
        type: string
        default: ""
      city: 
        type: string
        default: ""
      state: 
        type: string
        default: ""
      pincode: 
        type: number
      country:
        type: string
        default: "IN"

  ApprovalMessage:
    type: object
    required:
      - message
      - approved
      - prohibit
    properties:
      message: 
        type: string
      approved:
        type: boolean
      prohibit:
        type: boolean

  ApprovalMessageNew:
    type: object
    required:
      - message
      - status
    properties:
      message:
       type: string
      status:
        type: boolean
      detail:
        type: array
        items:
          $ref: '#/definitions/Approval'
      investmentObjective:
        $ref: '#/definitions/InvestmentObjective'
  
  Approval:
    type: object
    required:
      - field
    properties:
      field: 
        type: string
      reason:
        type: string
      valid:
        type: boolean
        default: false
      requirements:
        type: array
        items: 
          type: string
  
  InvestmentObjective:
    type: object
    properties:
      goal: 
        type: object
        $ref: '#/definitions/Goal'
      sectors: 
        type: object
        $ref: '#/definitions/Sectors'
      portfolioValuation: 
        type: object
        $ref: '#/definitions/PortfolioValuation'
      capitalization: 
        type: object
        $ref: '#/definitions/Capitalization'
      userText: 
        type: object
        $ref: '#/definitions/UserText'
      
  Goal:
    type: object
    required:
      - field
    properties: 
      field:
        type: string
      investorType:
        type: string
      suitability:
        type: string
      valid:
        type: boolean
        default: false
      reason:
        type: string
  
  Sectors:
    type: object
    properties:
      detail:
        type: array
        items:
          type: string
      valid:
        type: boolean
        default: false
      reason:
        type: string
  
  PortfolioValuation:
    type: object
    properties:
      field:
        type: string
        enum: ['Growth', 'Value', 'Blend']
      valid:
        type: boolean
        default: false
      reason:
        type: string
  
  Capitalization:
    type: object
    properties:
      field:
        type: string
        enum: ['Small Cap', 'Mid Cap', 'Large Cap']
      valid:
        type: boolean
        default: false
      reason:
        type: string
 
  UserText:
    type: object
    properties:
      detail:
        type: string
        # default: "Sample Description"
      valid:
        type: boolean
        default: false
      reason:
        type: string    

  SocialProfile:
    type: object
    properties:
      url:
        type: string
      photoUrl: 
        type: string
      userId:
        type: string

  ContestEntry:
    type: object
    required:
      - name
      - portfolio
    properties:
      name: 
        type: string
      portfolio:
        $ref: "#/definitions/Portfolio"

  Contest:
    type: object
    required:
      - name
      - startDate
      - endDate
      - active
      - rules
    properties:
      name:
        type: string
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      active:
        type: boolean
        default: false
      rules:
        type: object
        $ref: '#/definitions/ContestRules'
  
  ContestPatch:
    type: object
    properties:
      name:
        type: string
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      active:
        type: boolean
        default: true
      rules:
        type: object
        $ref: '#/definitions/ContestRules'

  ContestRules:
    type: object
    required:
      - prize
      - ruleTemplateFileName
    properties:
      prize:
        type: array
        items: 
          $ref: '#/definitions/ContestPrize'
      ruleTemplateFileName:
        type: string
    
  ContestPrize:
    type: object
    required:
      - rank
      - value
    properties: 
      rank:
        type: number
      value:
        type: number

  StockPrediction:
    type: object
    required:
      - position
      - startDate
      - endDate
      - target
    properties:
      position:
        type: object
        $ref: '#/definitions/Position'
      startDate:
        type: string
        format: date
      endDate:
        type: string
        format: date
      target:
        type: number
      stopLoss:
        type: number
        default: -1
      conditionalType:
        type: string
        default: "NOW"
        enum: ["NOW", "CROSS", "LIMIT"]
      real:
        type: boolean
        default: false
      

  DailyContestPredictions:
    type: object
    required:
      - predictions
    properties:
      predictions:
        type: array
        items:
          $ref: '#/definitions/StockPrediction'

